{"ast":null,"code":"// src/components/TypingText.js\nimport React,{useState,useEffect}from'react';import'./TypingText.css';import{jsx as _jsx}from\"react/jsx-runtime\";function TypingText(_ref){let{text,speed=100}=_ref;const[displayedText,setDisplayedText]=useState('');useEffect(()=>{// Reset displayedText when text prop changes.\nsetDisplayedText('');// A flag to stop the recursive updates if the component unmounts.\nlet isMounted=true;const typeLetter=i=>{if(!isMounted)return;if(i<text.length){const newText=text.slice(0,i+1);console.log(`Index: ${i}, adding: \"${text.charAt(i)}\", newText: \"${newText}\"`);setDisplayedText(newText);setTimeout(()=>typeLetter(i+1),speed);}};// Start typing from the first character.\ntypeLetter(0);// Cleanup: stop recursion on unmount.\nreturn()=>{isMounted=false;};},[text,speed]);return/*#__PURE__*/_jsx(\"div\",{className:\"typing-text\",children:displayedText});}export default TypingText;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","TypingText","_ref","text","speed","displayedText","setDisplayedText","isMounted","typeLetter","i","length","newText","slice","console","log","charAt","setTimeout","className","children"],"sources":["/Users/aidanfischer/my-react-app/src/components/TypingText.js"],"sourcesContent":["// src/components/TypingText.js\nimport React, { useState, useEffect } from 'react';\nimport './TypingText.css';\n\nfunction TypingText({ text, speed = 100 }) {\n  const [displayedText, setDisplayedText] = useState('');\n\n  useEffect(() => {\n    // Reset displayedText when text prop changes.\n    setDisplayedText('');\n\n    // A flag to stop the recursive updates if the component unmounts.\n    let isMounted = true;\n\n    const typeLetter = (i) => {\n      if (!isMounted) return;\n      if (i < text.length) {\n        const newText = text.slice(0, i + 1);\n        console.log(`Index: ${i}, adding: \"${text.charAt(i)}\", newText: \"${newText}\"`);\n        setDisplayedText(newText);\n        setTimeout(() => typeLetter(i + 1), speed);\n      }\n    };\n\n    // Start typing from the first character.\n    typeLetter(0);\n\n    // Cleanup: stop recursion on unmount.\n    return () => {\n      isMounted = false;\n    };\n  }, [text, speed]);\n\n  return <div className=\"typing-text\">{displayedText}</div>;\n}\n\nexport default TypingText;\n\n\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAwB,IAAvB,CAAEC,IAAI,CAAEC,KAAK,CAAG,GAAI,CAAC,CAAAF,IAAA,CACvC,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd;AACAQ,gBAAgB,CAAC,EAAE,CAAC,CAEpB;AACA,GAAI,CAAAC,SAAS,CAAG,IAAI,CAEpB,KAAM,CAAAC,UAAU,CAAIC,CAAC,EAAK,CACxB,GAAI,CAACF,SAAS,CAAE,OAChB,GAAIE,CAAC,CAAGN,IAAI,CAACO,MAAM,CAAE,CACnB,KAAM,CAAAC,OAAO,CAAGR,IAAI,CAACS,KAAK,CAAC,CAAC,CAAEH,CAAC,CAAG,CAAC,CAAC,CACpCI,OAAO,CAACC,GAAG,CAAC,UAAUL,CAAC,cAAcN,IAAI,CAACY,MAAM,CAACN,CAAC,CAAC,gBAAgBE,OAAO,GAAG,CAAC,CAC9EL,gBAAgB,CAACK,OAAO,CAAC,CACzBK,UAAU,CAAC,IAAMR,UAAU,CAACC,CAAC,CAAG,CAAC,CAAC,CAAEL,KAAK,CAAC,CAC5C,CACF,CAAC,CAED;AACAI,UAAU,CAAC,CAAC,CAAC,CAEb;AACA,MAAO,IAAM,CACXD,SAAS,CAAG,KAAK,CACnB,CAAC,CACH,CAAC,CAAE,CAACJ,IAAI,CAAEC,KAAK,CAAC,CAAC,CAEjB,mBAAOJ,IAAA,QAAKiB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEb,aAAa,CAAM,CAAC,CAC3D,CAEA,cAAe,CAAAJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}