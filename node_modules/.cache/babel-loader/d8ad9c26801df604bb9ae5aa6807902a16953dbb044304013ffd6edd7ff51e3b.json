{"ast":null,"code":"// src/components/TypingText.js\nimport React,{useState,useEffect}from'react';import'./TypingText.css';import{jsx as _jsx}from\"react/jsx-runtime\";function TypingText(_ref){let{text,speed=100}=_ref;const[displayedText,setDisplayedText]=useState('');useEffect(()=>{let index=0;const addLetter=()=>{if(index<text.length){setDisplayedText(prev=>prev+text.charAt(index));index++;setTimeout(addLetter,speed);}};addLetter();},[text,speed]);return/*#__PURE__*/_jsx(\"div\",{className:\"typing-text\",children:displayedText});}export default TypingText;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","TypingText","_ref","text","speed","displayedText","setDisplayedText","index","addLetter","length","prev","charAt","setTimeout","className","children"],"sources":["/Users/aidanfischer/my-react-app/src/components/TypingText.js"],"sourcesContent":["// src/components/TypingText.js\nimport React, { useState, useEffect } from 'react';\nimport './TypingText.css';\n\nfunction TypingText({ text, speed = 100 }) {\n  const [displayedText, setDisplayedText] = useState('');\n\n  useEffect(() => {\n    let index = 0;\n    const addLetter = () => {\n      if (index < text.length) {\n        setDisplayedText(prev => prev + text.charAt(index));\n        index++;\n        setTimeout(addLetter, speed);\n      }\n    };\n    addLetter();\n  }, [text, speed]);\n\n  return <div className=\"typing-text\">{displayedText}</div>;\n}\n\nexport default TypingText;\n\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAwB,IAAvB,CAAEC,IAAI,CAAEC,KAAK,CAAG,GAAI,CAAC,CAAAF,IAAA,CACvC,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd,GAAI,CAAAS,KAAK,CAAG,CAAC,CACb,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,GAAID,KAAK,CAAGJ,IAAI,CAACM,MAAM,CAAE,CACvBH,gBAAgB,CAACI,IAAI,EAAIA,IAAI,CAAGP,IAAI,CAACQ,MAAM,CAACJ,KAAK,CAAC,CAAC,CACnDA,KAAK,EAAE,CACPK,UAAU,CAACJ,SAAS,CAAEJ,KAAK,CAAC,CAC9B,CACF,CAAC,CACDI,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACL,IAAI,CAAEC,KAAK,CAAC,CAAC,CAEjB,mBAAOJ,IAAA,QAAKa,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAET,aAAa,CAAM,CAAC,CAC3D,CAEA,cAAe,CAAAJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}